
# SOLID

1. Single Responsibility Principle
2. Open/Closed Principle
3. Liskov Substitution Principle
4. Interface Segregation Principle
5. Dependency Invertion Principle

----------

1. Cada classe tem uma responsabilidade única;
2. As classes da aplicação devem ser abertas para extensão mas fechadas para modificação;
3. Nós devemos poder substiuir uma classe pai por uma herança dela e tudo continuar funcionando;
4. Segregar as interfaces sempre que conseguir (não vamos usar)
5. O mundo externo deve enviar as depenências para o componente